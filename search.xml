<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>MarkDown入门参考</title>
    <url>/2020/04/17/fist-post/</url>
    <content><![CDATA[<p>mathjax测试：</p>
<a id="more"></a>
<script type="math/tex; mode=display">
p_{i} = \mathbb{E}_{s,a\sim\pi}[\sum_{t=0}^{\infty}\nabla_{\theta}\log\pi(a_{i}|s_{i})|\mathcal{P}^{\pi}] \qquad{}\texttt{s.t.} p_{i}=s_{i}</script><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><p><strong>字体加粗</strong></p>
<p><em>斜体</em>，<strong><em>加粗斜体</em></strong>，<del>删除线</del>，<b style="color:red">段落中红色粗体</b></p>
<h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><ul>
<li>row1</li>
<li>row2</li>
</ul>
<ul>
<li>row1</li>
<li>row2</li>
</ul>
<h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><ol>
<li>row1</li>
<li>row2</li>
<li>row3</li>
</ol>
<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><blockquote>
<p>引用名言<br>经hexo渲染后html标签为<code>blockquote</code></p>
</blockquote>
<h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><p><a href="https://www.zhihu.com/search?type=content&amp;q=markdown" target="_blank" rel="noopener">学习markdown</a></p>
<h3 id="引入图片"><a href="#引入图片" class="headerlink" title="引入图片"></a>引入图片</h3><!-- ![](https://img1.doubanio.com/view/photo/l/public/p2575641927.webp) -->
<p><img src="https://img1.doubanio.com/view/photo/l/public/p2575641927.webp" width="50%"></p>
<h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><p><code>import pandas as pd</code></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pyecharts</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">print(<span class="string">'hello world'</span>)</span><br><span class="line"><span class="comment"># 多行注释</span></span><br></pre></td></tr></table></figure>
<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">序号</th>
<th style="text-align:center">名字</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:center">小明</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:center">小红</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <tags>
        <tag>Manual</tag>
      </tags>
  </entry>
  <entry>
    <title>pyecharts学习笔记</title>
    <url>/2020/04/18/pyecharts-learning/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>pyecahrts是用来生成eCharts图表的库，是百度开源的JS库</p>
<p>pyecharts 可以独立的html网页，也可以配置Flask、Djangle集成使用</p>
<a id="more"></a>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install pyecharts</span><br></pre></td></tr></table></figure>
<p>安装特别便捷，用<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip show pyecharts</span><br></pre></td></tr></table></figure><br>可以很方便查看pyecharts的安装情况,这个信息后面在部署发布的时候很有用，所以先放在这<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Name: pyecharts</span><br><span class="line">Version: <span class="number">1.7</span><span class="number">.1</span></span><br><span class="line">Summary: Python options, make charting easier</span><br><span class="line">Home-page: https:<span class="comment">//github.com/pyecharts/pyecharts</span></span><br><span class="line">Author: chenjiandongx</span><br><span class="line">Author-email: chenjiandongx@qq.com</span><br><span class="line">License: MIT</span><br><span class="line">Location: /<span class="built_in">home</span>/yuki/anaconda3/lib/python3<span class="number">.7</span>/site-packages</span><br><span class="line">Requires: prettytable, jinja2, simplejson</span><br><span class="line">Required-by:</span><br></pre></td></tr></table></figure><br>我们安装的版本是1.7.1</p>
<blockquote>
<p>工欲善其事，必先利其器</p>
</blockquote>
<p>pyecharts的技术文档是必不可少的，链接如下</p>
<p><a href="http://pyecharts.org/#/zh-cn/quickstart" target="_blank" rel="noopener">pyecarts快速上手</a></p>
<h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><p>举一个小栗子<br><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span> Bar</span><br><span class="line"></span><br><span class="line">bar = Bar()</span><br><span class="line">bar.add_xaxis([<span class="string">"衬衫"</span>, <span class="string">"羊毛衫"</span>, <span class="string">"雪纺衫"</span>, <span class="string">"裤子"</span>, <span class="string">"高跟鞋"</span>, <span class="string">"袜子"</span>])</span><br><span class="line">bar.add_yaxis(<span class="string">"商家A"</span>, [<span class="number">5</span>, <span class="number">20</span>, <span class="number">36</span>, <span class="number">10</span>, <span class="number">75</span>, <span class="number">90</span>])</span><br><span class="line"><span class="comment"># render 会生成本地 HTML 文件，默认会在当前目录生成 render.html 文件</span></span><br><span class="line"><span class="comment"># 也可以传入路径参数，如 bar.render("mycharts.html")</span></span><br><span class="line">bar.render()</span><br></pre></td></tr></table></figure><br>但我常用的是pyecharts的链式调用格式</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span> Bar</span><br><span class="line"></span><br><span class="line">bar = (</span><br><span class="line">    Bar()</span><br><span class="line">    .add_xaxis([<span class="string">"衬衫"</span>, <span class="string">"羊毛衫"</span>, <span class="string">"雪纺衫"</span>, <span class="string">"裤子"</span>, <span class="string">"高跟鞋"</span>, <span class="string">"袜子"</span>])</span><br><span class="line">    .add_yaxis(<span class="string">"商家A"</span>, [<span class="number">5</span>, <span class="number">20</span>, <span class="number">36</span>, <span class="number">10</span>, <span class="number">75</span>, <span class="number">90</span>])</span><br><span class="line">)</span><br><span class="line">bar.render()</span><br></pre></td></tr></table></figure>
<p>如果你用的时notebook来显示图片，最后一行<code>bar.render()</code>换成<code>bar.render_notebook()</code></p>
<p>notebook显示有几个坑，google都能查到解决方法</p>
<p>显示的图表如下:<br><img src="https://user-images.githubusercontent.com/19553554/55601215-656d1480-5792-11e9-87ac-19b912619d7f.png" alt=""></p>
<h2 id="搭建自己的echarts图表（pandas）"><a href="#搭建自己的echarts图表（pandas）" class="headerlink" title="搭建自己的echarts图表（pandas）"></a>搭建自己的echarts图表（pandas）</h2><p>pandas这里用来处理数据</p>
<h3 id="生成假数据"><a href="#生成假数据" class="headerlink" title="生成假数据"></a>生成假数据</h3><p>未完待续。。。</p>
]]></content>
      <tags>
        <tag>Manual</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/04/17/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <tags>
        <tag>Manual</tag>
      </tags>
  </entry>
  <entry>
    <title>python装饰器</title>
    <url>/2020/05/08/decorator/</url>
    <content><![CDATA[<h1 id="什么是装饰器"><a href="#什么是装饰器" class="headerlink" title="什么是装饰器"></a>什么是装饰器</h1><p>简单地认为，就是为Python函数添加额外的功能</p>
<h1 id="装饰器栗子"><a href="#装饰器栗子" class="headerlink" title="装饰器栗子"></a>装饰器栗子</h1><p>未完待续<br><a id="more"></a></p>
<h1 id="几个装饰器神器"><a href="#几个装饰器神器" class="headerlink" title="几个装饰器神器"></a>几个装饰器神器</h1><h2 id="调试神器PySnooper"><a href="#调试神器PySnooper" class="headerlink" title="调试神器PySnooper"></a>调试神器PySnooper</h2><blockquote>
<p>作用：开发者可以在任何庞大的代码库中使用它，而无需进行任何设置。你只需添加装饰器，并为日志输出地址指定路径，方法是将其路径指定为第一个参数。</p>
</blockquote>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install pysnooper</span><br></pre></td></tr></table></figure>
<h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><p>只需要在每个函数前面添加装饰器即可</p>
<h3 id="栗子"><a href="#栗子" class="headerlink" title="栗子"></a>栗子</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pysnooper</span><br><span class="line"></span><br><span class="line"><span class="meta">@pysnooper.snoop()</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">number_to_bits</span><span class="params">(number)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> number:</span><br><span class="line">        bits = []</span><br><span class="line">        <span class="keyword">while</span> number:</span><br><span class="line">            number, remainder = divmod(number, <span class="number">2</span>)</span><br><span class="line">            bits.insert(<span class="number">0</span>, remainder)</span><br><span class="line">        <span class="keyword">return</span> bits</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> [<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">number_to_bits(<span class="number">6</span>)</span><br></pre></td></tr></table></figure>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>注意@pysnooper.snoop() 一定得放在需要调试的函数前面，放类前面是没有用的~</p>
<h2 id="查看执行时间神器line-profiler"><a href="#查看执行时间神器line-profiler" class="headerlink" title="查看执行时间神器line_profiler"></a>查看执行时间神器line_profiler</h2><blockquote>
<p>作用:line_profiler可以统计每行代码的执行次数和执行时间等，时间单位为微妙，便于调优，找出瓶颈代码</p>
</blockquote>
<h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install line_profiler</span><br></pre></td></tr></table></figure>
<h3 id="栗子-1"><a href="#栗子-1" class="headerlink" title="栗子"></a>栗子</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="meta">@profile</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun</span><span class="params">()</span>:</span></span><br><span class="line">    a = <span class="number">0</span></span><br><span class="line">    b = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100000</span>):</span><br><span class="line">        a = a + i * i</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">        b += <span class="number">1</span></span><br><span class="line">        time.sleep(<span class="number">0.1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> a + b</span><br><span class="line"></span><br><span class="line">fun()</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Manual</tag>
      </tags>
  </entry>
  <entry>
    <title>tags</title>
    <url>/tags/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
